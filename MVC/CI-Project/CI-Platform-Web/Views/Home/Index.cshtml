@model CI_Project.Entities.ViewModels.HomeModel

@{
	ViewData["Title"] = "Home Page";
}

@section Styles {
	<link rel="Stylesheet" href="@Href("~/css/landingPage.css")" />
}
<main class="position-relative">
	<header id="header" class="ci-page-header bg-white w-100 z-3"
			style="background-color: transparent;min-width: max-content;">
		<div id="header-profile" class="mx-auto d-flex align-items-center justify-content-between"
			 style="max-width:var(--max-width);height:var(--header-height);background-color: transparent;">
			<div class="ci-page-header-left-div d-flex ">
				<div class="p-2 h-100 d-sm-none">
					<button id="header-sidebar-open-btn" class="bg-transparent sidebar-open border-0">
						<img src="./images/list.png" alt="">
					</button>
				</div>
				<a asp-action="Index" asp-controller="Home"><img id="logo" class=" mx-2" src="./images/logo.png" alt=""></a>
				<div id="header-sidebar" class=" d-sm-flex flex-row align-items-center justify-content-center">
					<div id="close-btn-div" class="p-2">
						<button id="header-sidebar-close"
								class="sidebar-close d-sm-none d-flex  justify-content-center p-2 bg-transparent border-0">
							<img src="./images/cancel1.png" alt="">
						</button>
					</div>
					<div id="stories-div" class="p-2">
						<a class="text-decoration-none text-black mx-2" asp-action="Index" asp-controller="StoryListing">
							Stories
						</a>
					</div>

					<div id="policy-div" class="dropdown mx-2">
						<button class="bg-transparent border-0 p-0 dropdown-toggle" type="button"
								data-bs-toggle="dropdown" aria-expanded="false">
							Policy
							<img class="mx-1" src="./images/drop-down.png" alt="">
						</button>
						<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
							<li><a class="dropdown-item" href="#">Action</a></li>
							<li><a class="dropdown-item" href="#">Another action</a></li>
							<li><a class="dropdown-item" href="#">Something else here</a></li>
						</ul>
					</div>
				</div>
			</div>
			<div class="ci-page-header-profile-div p-1 mx-1 d-flex" style="min-width: max-content;">
				<button id="search-button" class="p-1 mx-3 border-0 bg-white  d-sm-none">
					<img src="images/search.png" alt="search-btn">
				</button>
				
				<div class="dropdown mx-2 px-sm-0 px-2">
					<button class="bg-transparent d-flex justify-content-center align-items-center border-0 p-0 py-1 dropdown-toggle" type="button"
							id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
						<div href="">
							<img class="ci-page-header-profile-img mx-1"
								 style="border-radius: 50%;height: 40px;width: 40px;object-fit: cover;"
								 src="./images/user-img.png" alt="user-img">
						</div>
						<div class="d-md-block d-none">
							<span class="ci-page-header-profile-name mx-1 py-1">
								@Model.user.FirstName @Model.user.LastName
							</span>
							<img src="./images/drop-down.png" alt="">
						</div>
					</button>
					<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
						<li><a class="dropdown-item" href="#">logout</a></li>
					</ul>
				</div>
			</div>
		</div>
		<div id="filter-mission-navbar" class="h-auto w-100 z-1 p-0 border border-1 bg-white"
			 style="height:var(--header-height);">
			<div class="mx-auto row w-100" style="height:78px;max-width:1420px;  ">
				<div id="search-nav" class=" p-0 col-md-6 col-10 d-flex align-items-center  ">
					<input type="text" style="width:90%;" id="search-input" placeholder="Search mission..."
						   class="border-0 rounded-3 bg-transparent p-3 ps-5">
				</div>

				<div id="search-nav" class="mx-auto col-md-6 col-2 ">
					<div class=" h-100 d-flex justify-content-end align-items-center d-md-none px-2">
						<button id="filter-mission-sidebar-open-btn"
								class="sidebar-open bg-transparent border-0">
							<img src="./images/filter.png"
								 alt="">
						</button>
					</div>
					<div id="filter-bar" class="row" style="height:100%;left:-50vw;">
						<div class="d-flex d-md-none align-items-center justify-content-between mx-1 py-1 px-2 ">
							<button id="filter-mission-sidebar-close-btn"
									class="sidebar-close d-flex  justify-content-center p-2 bg-transparent border-0">
								<img src="./images/left.png" alt="">
							</button>
							<button id="filter-mission-clear-all-btn"
									class="clear-all d-flex  justify-content-center p-2 bg-transparent border-0">
								Clear All
							</button>
						</div>
						<div class="col-3 border-start border-end ">
							<div class="dropdown w-100 h-100 p-0">
								<button class="w-100 h-100 dropdown-toggle border-0  bg-transparent  d-flex justify-content-between align-items-center"
										type="button" data-bs-toggle="dropdown" aria-expanded="false">
									Country
									<img src="images/drop-down.png" alt="">
								</button>
								<ul id="country-dropdown" class="dropdown-menu">
									@foreach (var currCountry in @Model.countries)
									{
										<li class="p-1">
											<input class="countryName form-check-input" id="@currCountry.CountryName" type="checkbox" data-id="@currCountry.CountryId" data-type="country" value="@currCountry.CountryName" />
											<label for="@currCountry.CountryName">
												@currCountry.CountryName
											</label>
										</li>
									}
								</ul>
							</div>
						</div>
						<div class="col-3 border-start border-end">
							<div class="dropdown w-100 h-100 p-0">
								<button class="w-100 h-100 dropdown-toggle border-0  bg-transparent  d-flex justify-content-between align-items-center"
										type="button" data-bs-toggle="dropdown" aria-expanded="false">
									City
									<img src="images/drop-down.png" alt="">
								</button>
								<ul id="city-dropdown" class=" dropdown-menu">

									@foreach (var currCity in Model.cities)
									{
										<li class="p-1">
											<input class="cityName form-check-input" id="@currCity.CityName" type="checkbox" data-id="@currCity.CityId" data-type="city" value="@currCity.CityName">
											<label for="@currCity.CityName">
												@currCity.CityName
											</label>
										</li>
									}

								</ul>
							</div>
						</div>
						<div class="col-3 border-start border-end">
							<div class="dropdown w-100 h-100 p-0">
								<button class="w-100 h-100 dropdown-toggle border-0  bg-transparent  d-flex justify-content-between align-items-center"
										type="button" data-bs-toggle="dropdown" aria-expanded="false">
									Theme
									<img src="images/drop-down.png" alt="">
								</button>
								<ul id="theme-dropdown" class="dropdown-menu">
									@foreach (var currTheme in @Model.themes)
									{
										<li class="p-1">
											<input class="themeName form-check-input" id="@currTheme.MissionThemeTitle" type="checkbox" data-id="@currTheme.MissionThemeId" data-type="theme" value="@currTheme.MissionThemeTitle">
											<label for="@currTheme.MissionThemeTitle">
												@currTheme.MissionThemeTitle
											</label>
										</li>
									}
								</ul>
							</div>
						</div>
						<div class="col-3 border-start border-end">
							<div class="dropdown w-100 h-100 p-0">
								<button class="w-100 h-100 dropdown-toggle border-0  bg-transparent  d-flex justify-content-between align-items-center"
										type="button" data-bs-toggle="dropdown" aria-expanded="false">
									Skills
									<img src="images/drop-down.png" alt="">
								</button>
								<ul id="skill-dropdown" class="dropdown-menu">
									@foreach (var currSkill in @Model.skills)
									{
										<li class="p-1">
											<input class="skillName form-check-input" id="@currSkill.SkillName" type="checkbox" data-id="@currSkill.SkillId" data-type="skill" value="@currSkill.SkillName">
											<label for="@currSkill.SkillName">
												@currSkill.SkillName
											</label>
										</li>
									}

								</ul>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</header>

	<div id="scrollable-area" class="overflow-y-scroll ">
		<div id="main-container" class="container mt-2 mb-2 mb-sm-4">
			<!-- chips -->
			<div id="chips-div" class="mt-2 p-3 d-flex align-items-center overflow-x-scroll ">
				
			</div>

			<div id="missions-list">
			</div>

		</div>
	</div>

	<footer id="footer" class=" bg-white">
		<div class="mx-auto h-100 w-100 d-flex align-items-center " style="max-width:var(--max-width)">
			<a href="./privacy.html" class="text-decoration-none text-dark p-2">
				Privacy
				Policy
			</a>
		</div>
	</footer>
</main>

@section Scripts{

	<script type="text/javascript">
		const arrOfCountries = [];
		const arrOfCities = [];
		const arrOfThemes = [];
		const arrOfSkills = [];

		const maxMissionPerPage = 3;
		let missionToSearch = "";
		let sortVal = "";
		let missionCount;
		let currPage = 1;
		let currViewType = "grid";

		$(document).ready(function () {
			loadMissions();
		});

		$("#search-input").on("keyup", function (e) {
			missionToSearch = $("#search-input").val().toLowerCase();
			currPage = 1;
			loadMissions();
		});

		function loadMissions() {
			$.ajax({
				url: "/Home/bringMissionsToGridView",
				method: "POST",
				dataType: "html",
				data: { "countries": arrOfCountries, "cities": arrOfCities, "themes": arrOfThemes, "skills": arrOfSkills, "sortBy": sortVal, "missionToSearch": missionToSearch, "pageNo": currPage, "pageSize": maxMissionPerPage},
				success: function (data) {
					$('#missions-list').html("");
					$('#missions-list').html(data);
					sorting();
					pageNumbersEventListner();
					switchBetweenGridViewAndListView();
					clearAllFilters();
					
					if ($('#chips-div>span').length < 1) {
						$('#chips-div').empty();
					}

					toggleAddToFavouriteButton();
				},
				error: function (error) {
					console.log(error);
				}
			});
		}

		// ------------------------------------------------- CHIPS ------------------------------------------------------------
		const countries = document.querySelectorAll("#country-dropdown > li > input");
		const cities = document.querySelectorAll("#city-dropdown > li > input");
		const themes = document.querySelectorAll("#theme-dropdown > li > input");
		const skills = document.querySelectorAll("#skill-dropdown > li > input");
		const chipsDiv = document.getElementById("chips-div");

		addListnerToFilter(countries);
		addListnerToFilter(cities);
		addListnerToFilter(themes);
		addListnerToFilter(skills);

		function addListnerToFilter(filter) {
			for (let currElement of filter) {
				currElement.addEventListener("change", () => {
					let dataIdOfChipToDelete = currElement.getAttribute("data-id");
					let dataTypeOfChipToDelete = currElement.getAttribute("data-type");
					let valueToAdd = +(currElement.getAttribute("data-id"));

					if (dataTypeOfChipToDelete == "country") {
						checkUncheck(arrOfCountries, currElement, dataIdOfChipToDelete, dataTypeOfChipToDelete, valueToAdd);
					}
					else if (dataTypeOfChipToDelete == "city") {
						checkUncheck(arrOfCities, currElement, dataIdOfChipToDelete, dataTypeOfChipToDelete, valueToAdd);
					}
					else if (dataTypeOfChipToDelete == "theme") {
						checkUncheck(arrOfThemes, currElement, dataIdOfChipToDelete, dataTypeOfChipToDelete, valueToAdd);
					}
					else if (dataTypeOfChipToDelete == "skill") {
						checkUncheck(arrOfSkills, currElement, dataIdOfChipToDelete, dataTypeOfChipToDelete, valueToAdd);
					}
				});
			}
		}
		//--------------------------------------------
		function checkUncheck(arr, currElement, dataIdOfChipToDelete, dataTypeOfChipToDelete, valueToAdd) {
			//--------------------------- check-add -------------------------
			if (arr.indexOf(valueToAdd) == -1) {
				arr.push(valueToAdd);
				currPage = 1;
				if ($('#chips-div>span').length < 1) {
					chipsDiv.insertAdjacentHTML("afterbegin", `<button id="clear-all" class="button px-2 border-0" style="min-width:max-content;">Clear all</button>`);
				}
				chipsDiv.insertAdjacentHTML("afterbegin", `<span data="${currElement.value}" class="chip p-1 px-3 me-2 border border-1 d-flex align-items-center justify-content-end rounded-pill">
																						${currElement.value}
																				<button data-id="${valueToAdd}" data-type="${dataTypeOfChipToDelete}" class="button px-2 border-0">
																					<img  src="images/cancel.png" alt="">
																				</button>
																			</span>`);
				loadMissions();
				//----------------------- cross-delete -----------------------
				let allChipsItemsBtn = document.querySelectorAll("#chips-div span button");
				for (let currChipDeleteBtn of allChipsItemsBtn) {
					currChipDeleteBtn.addEventListener("click", () => {
						deleteChip(currChipDeleteBtn.parentElement);
					});
					break;
				}
			}
			//--------------------------- uncheck-delete -------------------------
			else {
				let idxOfChipToDelete = arr.indexOf(valueToAdd);
				arr.splice(idxOfChipToDelete, 1);
				let allChipsItems = document.querySelectorAll("#chips-div span");
				if (allChipsItems.length > 0) {
					for (let currChip of allChipsItems) {
						if (currChip.childNodes[1].getAttribute("data-type") == dataTypeOfChipToDelete) {
							if (currChip.childNodes[1].getAttribute("data-id") == dataIdOfChipToDelete) {
								currChip.remove();
								currPage = 1;
								loadMissions();
							}
						}
					}
				}
			}
		}

		function deleteChip(chipToDelete) {
			let dataIdOfChipToDelete = +chipToDelete.childNodes[1].getAttribute("data-id");
			let dataTypeOfChipToDelete = chipToDelete.childNodes[1].getAttribute("data-type");

			switch (dataTypeOfChipToDelete) {
				case "country":
					arrOfCountries.splice(arrOfCountries.indexOf(dataIdOfChipToDelete), 1);
					$('#' + chipToDelete.getAttribute('data')).prop('checked', false)
					chipToDelete.remove();
					currPage = 1;
					loadMissions();
					break;
				case "city":
					arrOfCities.splice(arrOfCities.indexOf(dataIdOfChipToDelete), 1);
					$('#' + chipToDelete.getAttribute('data')).prop('checked', false)
					chipToDelete.remove();
					currPage = 1;
					loadMissions();
					break;
				case "theme":
					arrOfThemes.splice(arrOfThemes.indexOf(dataIdOfChipToDelete), 1);
					$('#' + chipToDelete.getAttribute('data')).prop('checked', false)
					chipToDelete.remove();
					currPage = 1;
					loadMissions();
					break;
				case "skill":
					arrOfSkills.splice(arrOfSkills.indexOf(dataIdOfChipToDelete), 1);
					$('#' + chipToDelete.getAttribute('data')).prop('checked', false)
					chipToDelete.remove();
					currPage = 1;
					loadMissions();
					break;
				default:
					alert("Error");
					break;
			}
		}

		function clearAllFilters(){
			$("#clear-all").on("click",()=>{
				$('#filter-mission-navbar input[type=checkbox]').prop('checked', false);
				arrOfCountries.splice(0,arrOfCountries.length);
				arrOfCities.splice(0,arrOfCities.length);
				arrOfThemes.splice(0, arrOfThemes);
				arrOfSkills.splice(0, arrOfSkills);
				currPage=1;
				$('#chips-div').empty();
				loadMissions();
			});
		}

				function sorting() {
			//----------------- sorting -----------------
			$('#sort-div > li > a').on('click', function () {
				sortVal = $(this).html();
				currPage = 1;
				loadMissions();
			});
		}

		//----------------- paging -----------------
		

		function pageNumbersEventListner() {
			const doublePrevButton = document.getElementById("double-prev-button");
			const prevButton = document.getElementById("prev-button");
			const paginationNumbers = document.querySelectorAll("#pagination-numbers > li");
			const nextButton = document.getElementById("next-button");
			const doubleNextButton = document.getElementById("double-next-button");
			let pageNums = [];
			for (let i = 1; i <= paginationNumbers.length; i++) {
				pageNums.push(i);
			}
				$(`#page-${currPage}`).addClass('page-link-active');
				$(`#page-${currPage} > span`).addClass('page-link-active');

			$('.pageCounters').on('click', function () {
				currPage = +$(this).children(0).text();
				let pageToColorId = "#page-"+currPage;
				loadMissions();
			});
			
			if (currPage == pageNums[0]) {
				doublePrevButton.style.display = "none";
				prevButton.style.display = "none";
			}
			if (currPage == pageNums[pageNums.length-1]) {
				nextButton.style.display = "none";
				doubleNextButton.style.display = "none";
			}

			if (currPage == pageNums[pageNums.length-2]) {
				doubleNextButton.style.display = "none";
			}
			if (currPage == 2) {
				doublePrevButton.style.display = "none";
			}
			$('#double-prev-button').on('click', function () {
				currPage = 1;
				loadMissions();
			});
			
			$('#next-button').on('click', function () {
				currPage = currPage+1;
				loadMissions();
			});
			
			$('#prev-button').on('click', function () {
				currPage = currPage-1;
				loadMissions();
			});

			$('#double-next-button').on('click', function () {
				currPage = pageNums[pageNums.length-1];
				loadMissions();
			});
		}
		// -------------------------------------------- toggle grid and list view ---------------------------------------------
		function switchBetweenGridViewAndListView(){
			const gridView = document.getElementById("mission-card-grid-div");
			const listView = document.getElementById("mission-card-list-div");
			const gridBtn = document.getElementById("grid-view");
			const listBtn = document.getElementById("list-view");

			if (currViewType == "grid") {
				gridView.setAttribute("style", "display:flex !important");
				listView.setAttribute("style", "display:none !important");
			}
			else{
				gridView.setAttribute("style", "display:none !important");
				listView.setAttribute("style", "display:block !important");
			}

			gridBtn.addEventListener("click", () => {
				currViewType="grid";
				gridView.setAttribute("style", "display:flex !important");
				listView.setAttribute("style", "display:none !important");
			});

			listBtn.addEventListener("click", () => {
				currViewType="list";
				gridView.setAttribute("style", "display:none !important");
				listView.setAttribute("style", "display:block !important");
			});

			window.matchMedia("(max-width:768px)").addListener(() => {
				gridView.setAttribute("style", "display:flex !important");
				listView.setAttribute("style", "display:none !important");
			});
		}

		//----------------------------------- ad to fav and remove from fav ----------------------------------------
		function toggleAddToFavouriteButton(){
			$('.fav-mission-id').on('click',function (){
				let missionId = $(this).children(0).attr("data-id");

				$.ajax({
					url: "/Home/addOrRemoveFavourite",
					method: "POST",
					dataType: "html",
					data: { "missionId": missionId},
					success: function (data) {
						loadMissions();
					},
					error: function (error) {
						console.log(error);
					}
				});
			});
		}

	</script>

	<script src="~/js/custom.js"></script>
	<script src="~/js/filterMissionSidebar.js"></script>
	<script src="~/js/headerSidebar.js"></script>
	<script src="~/js/scrolable.js"></script>
}