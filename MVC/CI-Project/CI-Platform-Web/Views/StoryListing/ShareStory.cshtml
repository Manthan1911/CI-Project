@model CI_Project.Entities.ViewModels.StoryModel

@{
	ViewData["Title"] = "Share Story Page";
	int IsStoryDraft = Model.IsStoryDraft;
	var userId = Context.Session.GetString("UserId");
	var fullName = Context.Session.GetString("FullName");
}

@section Styles {
	<link rel="Stylesheet" href="@Href("~/css/story.css")" />
}


<main class="position-relative">
	<header id="header" class="border-2 border-bottom ci-page-header bg-white w-100 z-3"
			style="background-color: transparent;min-width: max-content;">
		<div id="header-profile" class="mx-auto d-flex align-items-center justify-content-between"
			 style="max-width:var(--max-width);height:var(--header-height);background-color: transparent;">
			<div class="ci-page-header-left-div d-flex ">
				<div class="p-2 h-100 d-sm-none">
					<button id="header-sidebar-open-btn" class="bg-transparent sidebar-open border-0">
						<img src="~/images/list.png" alt="">
					</button>
					<button id="search-button" class="d-none"></button>
				</div>
				<a asp-action="Index" asp-controller="Home">
					<img id="logo" class=" mx-2" src="~/images/logo.png" alt="">
				</a>
				<div id="header-sidebar" class=" d-sm-flex flex-row align-items-center justify-content-center">
					<div id="close-btn-div" class="p-2">
						<button id="header-sidebar-close"
								class="sidebar-close d-sm-none d-flex  justify-content-center p-2 bg-transparent border-0">
							<img src="~/images/cancel1.png" alt="">
						</button>
					</div>
					<div id="stories-div" class="p-2">
						<a asp-action="Index" asp-controller="StoryListing" class="text-decoration-none text-black mx-2">
							Stories
						</a>
					</div>

					<div id="policy-div" class="dropdown mx-2">
						<button class="bg-transparent border-0 p-0 dropdown-toggle" type="button"
								data-bs-toggle="dropdown" aria-expanded="false">
							Policy
							<img class="mx-1" src="~/images/drop-down.png" alt="">
						</button>
						<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
							<li><a class="dropdown-item" href="#">Action</a></li>
							<li><a class="dropdown-item" href="#">Another action</a></li>
							<li><a class="dropdown-item" href="#">Something else here</a></li>
						</ul>
					</div>
				</div>
			</div>
			<div class="ci-page-header-profile-div p-1 mx-1 d-flex" style="min-width: max-content;">

				<div class="dropdown mx-2 px-sm-0 px-2">
					<button class="bg-transparent d-flex justify-content-center align-items-center border-0 p-0 py-1 dropdown-toggle" type="button"
							id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
						<div href="">
							<img class="ci-page-header-profile-img mx-1"
								 style="border-radius: 50%;height: 40px;width: 40px;object-fit: cover;"
								 src="~/images/user-img.png" alt="user-img">
						</div>
						<div class="d-md-block d-none">
							<span class="ci-page-header-profile-name mx-1 py-1">
								@fullName
							</span>
							<img src="~/images/drop-down.png" alt="">
						</div>
					</button>
					<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
						<li><a class="dropdown-item" asp-action="Index" asp-controller="UserProfile">Add Profile</a></li>
						<li><a class="dropdown-item" href="#">logout</a></li>
					</ul>
				</div>
			</div>
		</div>

	</header>

	<div id="scrollable-area" class="overflow-y-scroll">
		<form id="shareStoryForm" method="post" asp-action="ShareStory" asp-controller="StoryListing" enctype="multipart/form-data" class="container " style="max-width:var(--max-width);">
			<input type="hidden" value="@userId" asp-for="UserId" />
			<span class="fs-2 fw-semibold">Share your story</span>
			@*---------------- row-1 -----------------------*@
			<div class="row py-2">
				<div class="d-flex flex-column col-sm-6 col-12 ">
					<label class="py-2">Select Mission</label>
					<select id="missionDropdown" asp-for="MissionId" class="p-2 rounded-2 border border-2">
						@if (Model.Missions != null)
						{
							@foreach (var currMission in Model.Missions)
							{
								<option value="@currMission.MissionId">@currMission.Title</option>
							}
						}
					</select>
					<span class="text-danger" asp-validation-for="MissionId"></span>
				</div>
				<div class="d-flex flex-column col-sm-6 col-12">
					<label class="p-2">My Story Title</label>
					<input asp-for="StoryTitle" class="p-2 rounded-3 border border-2" type="text" />
					<span class="text-danger" asp-validation-for="StoryTitle"></span>
				</div>
			</div>

			@*---------------- tiny mcee -----------------------*@
			<div class="row py-2">
				<label class="p-2">My story</label>
				<div>
					<textarea asp-for="StoryDescription" id="tiny"></textarea>
				</div>
				<span class="text-danger" asp-validation-for="StoryDescription"></span>
			</div>

			@*---------------- Video URL -----------------------*@
			<div class="row py-2">
				<div class="d-flex flex-column col ">
					<label class="py-2">Enter Video URL</label>
					<input asp-for="VideoUrl" type="text" class="p-2 rounded-3 border border-2" />
				</div>
			</div>

			@*---------------- Upload Your Photos -----------------------*@
			<div class="row py-2">
				<div class="d-flex flex-column col">
					<label class="py-2">Upload Your Photos</label>
					<div id="dragDiv" class="border-dashed-grey">
						<div class="d-flex justify-content-center align-item-center p-5">
							<img src="~/images/drag-and-drop.png" />
						</div>
						<input type="file" id="inputFile" name="files" class="p-2 rounded-3 border border-2" hidden multiple />
					</div>
				</div>
			</div>
			<span class="text-danger" asp-validation-for="StoryMedia"></span>
			@*---------------- Image Preview Div -----------------------*@
			<input hidden id="isStoryDraft" value="@IsStoryDraft" />
			@if (IsStoryDraft == 1)
			{

				@foreach (var currStoryMedia in Model.StoryMedia!)
				{
					var imageUrl = currStoryMedia.Path + currStoryMedia.Type;
					var imageName = currStoryMedia.Path.Remove(0, 8) + currStoryMedia.Type;
					<input hidden data-imgurl="@imageUrl" data-path="@imageUrl" data-type="@currStoryMedia.Type" value="@imageName" />
				}
				<input hidden name="storyId" value="@Model.StoryId" />
			}
			<div id="imagePreviewDiv" class="py-2">
			</div>
			@*---------------- Buttons -----------------------*@
			<div class="row py-2 ">
				<div class="d-flex justify-content-between align-items-center">
					<input hidden id="action" name="action" />
					<div>
						<a asp-action="Index" asp-controller="StoryListing" class="bg-transparent text-decoration-none py-2 px-3 rounded-pill border border-2 border-danger text-danger">Back</a>
						@if (IsStoryDraft == 1)
						{
							<a asp-action="clearDraft" asp-controller="StoryListing" asp-route-storyId="@Model.StoryId" class="bg-transparent text-decoration-none py-2 px-3 rounded-pill border border-2 border-danger text-danger">Clear Draft</a>
						}
					</div>
					<div>
						<button type="submit" value="draft" class="bg-transparent py-2 px-3 rounded-pill border border-2 border-warning text-warning">Save</button>
						<button type="submit" value="share" class="bg-transparent py-2 px-3 rounded-pill border border-2 border-warning text-warning">Submit</button>
					</div>
				</div>
			</div>
		</form>
	</div>

	<footer id="footer" class=" bg-white">
		<div class="mx-auto h-100 w-100 d-flex align-items-center " style="max-width:var(--max-width)">
			<a href="./privacy.html" class="text-decoration-none text-dark p-2">
				Privacy
				Policy
			</a>
		</div>
	</footer>
</main>

@section Scripts{
	<script>
		let filesArr = [];
		let dragDiv = document.getElementById('dragDiv');
		let inputFile = document.getElementById('inputFile');
		let imagePreviewDiv = document.getElementById('imagePreviewDiv');
		let isStoryDraft = document.getElementById('isStoryDraft').value;

		dragDiv.addEventListener("click", () => {
			inputFile.click();
		});

		dragDiv.addEventListener("dragover", (e) => {
			e.preventDefault();
			dragDiv.classList.add("drag-hover");
		});

		dragDiv.addEventListener("drop", (e) => {
			e.preventDefault();
			let droppedImages = e.dataTransfer.files;
			addImageToArray(droppedImages);
		});

		inputFile.addEventListener("change", () => {
			let chosenFiles = inputFile.files;
			addImageToArray(chosenFiles);
		});

		dragDiv.addEventListener("dragleave", (e) => {
			e.preventDefault();
			dragDiv.classList.remove("drag-hover");
		});

		const addImageToArray = (images) => {
			console.log(images);
			if (images.length == 0) return;
			for (let i = 0; i < images.length; i++) {
				if (images[i].type.split("/")[0] != 'image') continue;
				if (!filesArr.some(e => e.name == images[i].name)) {
					filesArr.push(images[i])
					previewImage(URL.createObjectURL(images[i]), i);
				}
			}
			document.querySelectorAll('.remove-from-preview').forEach((element) => {
				element.addEventListener("click", (e) => {
					filesArr.splice($(element).data('index'), 1);
					element.parentNode.remove();
					resetData();
					console.log(filesArr);
				});
			});
		}

		const previewImage = (src, i) => {
			let crossImg = "/images/cross.png";
			imagePreviewDiv.innerHTML += `
													<div class="position-relative d-inline-block m-1">
														<img src="${src}" class="object-fit-cover" style="height:100px;width:130px;" alt="prevImg" />
														<button data-index="${i}" class="remove-from-preview position-absolute top-0 end-0 d-flex align-items-center border-0 bg-dark p-0 m-0">
															<img src="${crossImg}" class=" bg-dark p-1 m-0" />
														</button>
													</div>
													`;
		}

		function resetData() {
			Array.from(document.querySelectorAll(`.remove-from-preview`)).forEach((element, i) => {
				element.setAttribute("data-index", i);
			})
		}

		// --------------------------------------------------
		if (isStoryDraft == 1) {
			Array.from(document.querySelectorAll('[data-imgurl]')).forEach((image, index) => {
				//console.log("index : " + index);
				const fileName = image.value;
				console.log(fileName);
				const url = $(image).data("path");
				console.log(url);
				const type = $(image).data("type");
				console.log(type);
				return fetch(url)
					.then(response => response.arrayBuffer())
					.then(buffer => {
						const myFile = new File([buffer], fileName, { type: `image/${type.slice(1)}` });
						addImageToArray([myFile]);
					});
			});
		}
		let shareStoryForm = document.getElementById('shareStoryForm');
		shareStoryForm.addEventListener('submit', (e) => {
			e.preventDefault();
			saveFilesArrToInput();
			let submitVal = document.getElementById('action');
			submitVal.value = e.submitter.getAttribute("value");
			console.log("submit" + submitVal.value);
			shareStoryForm.submit();
		});

		function saveFilesArrToInput() {
			let myFiles = new DataTransfer();
			filesArr.forEach(imageFile => myFiles.items.add(imageFile));
			inputFile.files = myFiles.files;
		}

	</script>


	<script src="~/js/tiny.js"></script>
	<script src="~/js/headerSidebar.js"></script>
	<script src="~/js/scrolable.js"></script>
}